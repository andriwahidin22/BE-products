generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  BOSS
}

enum EmployeeStatus {
  ACTIVE
  INACTIVE
}

enum AttendanceStatus {
  HADIR
  TERLAMBAT
  IZIN
  SAKIT
}

enum OvertimeStatus {
  PENDING
  APPROVED
  REJECTED
}

enum ActivityType {
  CLOCK_IN
  CLOCK_OUT
  LATE
  OVERTIME
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  name     String
  role     Role

  // Relasi untuk menyetujui lembur
  approvedOvertimes Overtime[] @relation("UserApprovals")
}

model Employee {
  id         String         @id @default(uuid())
  employeeId String         @unique
  name       String
  email      String         @unique
  phone      String
  department String
  position   String
  startDate  DateTime
  status     EmployeeStatus @default(ACTIVE)
  avatar     String
  qrCode     String? // base64 / URL

  attendances Attendance[]
  overtimes   Overtime[]
  logs        ActivityLog[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Attendance {
  id          String           @id @default(uuid())
  employeeId  String
  date        DateTime
  clockIn     DateTime
  clockOut    DateTime?
  status      AttendanceStatus
  isLate      Boolean
  lateMinutes Int?
  workHours   Float?

  employee Employee @relation(fields: [employeeId], references: [id])

  @@unique([employeeId, date])
}

model Overtime {
  id         String         @id @default(uuid())
  employeeId String
  date       DateTime
  startTime  DateTime
  endTime    DateTime?
  duration   Float?
  reason     String
  status     OvertimeStatus
  approvedBy Int?

  approvedAt DateTime?
  notes      String?

  employee Employee @relation(fields: [employeeId], references: [id])
  approver User?    @relation("UserApprovals", fields: [approvedBy], references: [id])

  createdAt DateTime @default(now())
}

model ActivityLog {
  id         String       @id @default(uuid())
  type       ActivityType
  employeeId String
  message    String
  timestamp  DateTime     @default(now())

  employee Employee @relation(fields: [employeeId], references: [id])
}
